import React, { useState, useEffect } from 'react';
import { useNavigate, useSearchParams } from 'react-router-dom';
import { createCheckoutSession } from '../services/api';

export default function PaymentPage() {
  const navigate = useNavigate();
  const [searchParams] = useSearchParams();
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  
  // Extract form data from URL params
  const formData = {
    city: searchParams.get('city') || 'Barcelona',
    audience: searchParams.get('audience') || 'him',
    interests: searchParams.get('interests')?.split(',') || [],
    date: searchParams.get('date') || new Date().toISOString().slice(0, 10),
    budgetFrom: searchParams.get('budgetFrom') || '',
    budgetTo: searchParams.get('budgetTo') || ''
  };

  const handlePayment = async () => {
    setLoading(true);
    setError('');
    
    try {
      const response = await createCheckoutSession(formData);
      // Redirect to Stripe Checkout
      window.location.href = response.url;
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞');
    } finally {
      setLoading(false);
    }
  };

  const handleBack = () => {
    navigate(-1);
  };

  const containerStyle = {
    minHeight: '100vh',
    backgroundColor: '#eff6ff',
    padding: '32px 16px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center'
  };

  const cardStyle = {
    backgroundColor: 'white',
    borderRadius: '16px',
    boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
    padding: '48px',
    maxWidth: '500px',
    width: '100%',
    textAlign: 'center'
  };

  const titleStyle = {
    fontSize: '32px',
    fontWeight: 'bold',
    color: '#1f2937',
    marginBottom: '16px'
  };

  const subtitleStyle = {
    fontSize: '18px',
    color: '#6b7280',
    marginBottom: '32px'
  };

  const priceStyle = {
    fontSize: '48px',
    fontWeight: 'bold',
    color: '#3b82f6',
    marginBottom: '8px'
  };

  const priceSubtextStyle = {
    fontSize: '16px',
    color: '#6b7280',
    marginBottom: '32px'
  };

  const featuresStyle = {
    textAlign: 'left',
    marginBottom: '32px'
  };

  const featureStyle = {
    display: 'flex',
    alignItems: 'center',
    marginBottom: '12px',
    fontSize: '16px',
    color: '#374151'
  };

  const iconStyle = {
    marginRight: '12px',
    fontSize: '20px'
  };

  const buttonStyle = {
    width: '100%',
    padding: '16px',
    borderRadius: '12px',
    backgroundColor: '#3b82f6',
    color: 'white',
    fontWeight: 'bold',
    fontSize: '18px',
    border: 'none',
    cursor: 'pointer',
    transition: 'all 0.2s',
    marginBottom: '16px'
  };

  const backButtonStyle = {
    width: '100%',
    padding: '12px',
    borderRadius: '12px',
    backgroundColor: 'transparent',
    color: '#6b7280',
    fontWeight: '500',
    fontSize: '16px',
    border: '2px solid #e5e7eb',
    cursor: 'pointer',
    transition: 'all 0.2s'
  };

  const loadingStyle = {
    ...buttonStyle,
    backgroundColor: '#9ca3af',
    cursor: 'not-allowed'
  };

  return (
    <div style={containerStyle}>
      <div style={cardStyle}>
        <h1 style={titleStyle}>–û–ø–ª–∞—Ç–∞</h1>
        <p style={subtitleStyle}>
          –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –≥–æ—Ç–æ–≤ –∫ –ø–æ–∫—É–ø–∫–µ
        </p>

        <div style={priceStyle}>$16</div>
        <div style={priceSubtextStyle}>–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞</div>

        <div style={featuresStyle}>
          <div style={featureStyle}>
            <span style={iconStyle}>üéØ</span>
            –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –ø–æ–¥ –≤–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã
          </div>
          <div style={featureStyle}>
            <span style={iconStyle}>üì±</span>
            PDF —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –æ—Ñ–ª–∞–π–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
          </div>
          <div style={featureStyle}>
            <span style={iconStyle}>‚≠ê</span>
            –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–µ—Å—Ç–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
          </div>
          <div style={featureStyle}>
            <span style={iconStyle}>üåç</span>
            –î–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –¥–Ω—è —Å –∞–¥—Ä–µ—Å–∞–º–∏ –∏ —Å–æ–≤–µ—Ç–∞–º–∏
          </div>
        </div>

        {error && (
          <div style={{ color: '#ef4444', marginBottom: '16px' }}>
            {error}
          </div>
        )}

        <button
          onClick={handlePayment}
          disabled={loading}
          style={loading ? loadingStyle : buttonStyle}
          onMouseOver={(e) => {
            if (!loading) {
              e.target.style.backgroundColor = '#2563eb';
              e.target.style.transform = 'scale(1.02)';
            }
          }}
          onMouseOut={(e) => {
            if (!loading) {
              e.target.style.backgroundColor = '#3b82f6';
              e.target.style.transform = 'scale(1)';
            }
          }}
        >
          {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å $16'}
        </button>

        <button
          onClick={handleBack}
          style={backButtonStyle}
          onMouseOver={(e) => {
            e.target.style.backgroundColor = '#f9fafb';
            e.target.style.borderColor = '#d1d5db';
          }}
          onMouseOut={(e) => {
            e.target.style.backgroundColor = 'transparent';
            e.target.style.borderColor = '#e5e7eb';
          }}
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–≤—å—é
        </button>

        <div style={{ marginTop: '24px', fontSize: '14px', color: '#9ca3af' }}>
          <div>–ì–æ—Ä–æ–¥: {formData.city}</div>
          <div>–î–∞—Ç–∞: {formData.date}</div>
          <div>–ò–Ω—Ç–µ—Ä–µ—Å—ã: {formData.interests.join(', ')}</div>
        </div>
      </div>
    </div>
  );
}